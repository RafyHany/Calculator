{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      expression: \"\",\n      result: \"\",\n      expSend: {\n        firstOperand: 0,\n        operator: \"\",\n        secondOperand: 0\n      },\n      ended: 1,\n      unary: false,\n      index: 0\n    };\n  },\n  methods: {\n    appendOperand(input) {\n      this.expression = this.expression + input;\n      switch (input) {\n        case \"+\":\n          this.expSend.operator = input;\n          this.ended = 2;\n          this.index = this.expression.length - 1;\n          break;\n        case \"-\":\n          this.expSend.operator = input;\n          this.ended = 2;\n          this.index = this.expression.length - 1;\n          break;\n        case \"×\":\n          this.expSend.operator = \"*\";\n          this.ended = 2;\n          this.index = this.expression.length - 1;\n          break;\n        case \"/\":\n          this.expSend.operator = input;\n          this.ended = 2;\n          this.index = this.expression.length - 1;\n          break;\n        case \"√\":\n          this.expSend.operator = \"root\";\n          this.ended = 2;\n          this.unary = true;\n          this.index = this.expression.length - 1;\n          break;\n        case \"²\":\n          this.expSend.operator = \"sqr\";\n          this.ended = 2;\n          this.unary = true;\n          this.index = this.expression.length - 1;\n          break;\n        case \"^(-1)\":\n          this.expSend.operator = \"inverse\";\n          this.ended = 2;\n          this.unary = true;\n          this.index = this.expression.length - 1;\n          break;\n        case \"%\":\n          this.expSend.operator = \"percent\";\n          this.ended = 2;\n          this.unary = true;\n          this.index = this.expression.length - 1;\n          break;\n      }\n      if (this.ended === 1) {\n        this.expSend.firstOperand = parseFloat(this.expression);\n      } else if (this.ended === 2) {\n        this.expSend.secondOperand = parseFloat(this.expression.slice(this.index + 1, this.expression.length));\n      }\n      this.result = \"\";\n      console.log(this.expSend);\n    },\n    deleteOPerand() {\n      this.expression = this.expression.slice(0, -1);\n    },\n    deleteAll() {\n      this.expression = \"\";\n      this.expSend.firstOperand = 0;\n      this.expSend.secondOperand = 0;\n      this.expSend.operator = \"\";\n      this.ended = 1;\n      this.unary = false;\n      this.index = 0;\n    },\n    equal() {\n      this.ex;\n    }\n  }\n};","map":{"version":3,"names":["name","data","expression","result","expSend","firstOperand","operator","secondOperand","ended","unary","index","methods","appendOperand","input","length","parseFloat","slice","console","log","deleteOPerand","deleteAll","equal","ex"],"sources":["C:\\Users\\Lenovo\\Documents\\project\\calculator\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"calcbody\">\n      \n    <div class=\"screen\"> <div class=\"inner\">{{ expression }} {{ result }}</div></div>\n    <br>\n    <div class=\"calcbuttons\">\n    <button class=\"but has\"  @click=\"appendOperand('%')\" >%</button>\n    <button class=\"but has\" @click=\"deleteAll\">CE</button>\n    <button class=\"but has\" @click=\"deleteAll\">C</button>\n    <button class=\"but has\" @click=\"deleteAll\">DEL</button>\n    <button class=\"but\" @click=\"appendOperand('²')\">X <sup>2</sup></button>\n    <button class=\"but\" @click=\"appendOperand('√')\">&radic;</button>\n    <button class=\"but\"  @click=\"appendOperand('^(-1)')\">X <sup>-1</sup></button>\n    <button class=\"but has\"  @click=\"appendOperand('/')\">&divide;</button>\n    <button class=\"but\"  @click=\"appendOperand('1')\">1</button>\n    <button class=\"but\"  @click=\"appendOperand('2')\">2</button>\n    <button class=\"but\"  @click=\"appendOperand('3')\">3</button>\n    <button class=\"but has\" @click=\"appendOperand('+')\">+</button>\n    <button class=\"but\"  @click=\"appendOperand('4')\">4</button>\n    <button class=\"but\"  @click=\"appendOperand('5')\">5</button>\n    <button class=\"but\"  @click=\"appendOperand('6')\">6</button>\n    <button class=\"but has\"  @click=\"appendOperand('-')\">-</button>\n    <button class=\"but\"  @click=\"appendOperand('7')\">7</button>\n    <button class=\"but\"  @click=\"appendOperand('8')\">8</button>\n    <button class=\"but\"  @click=\"appendOperand('9')\">9</button>\n    <button class=\"but has\" @click=\"appendOperand('×')\">&times;</button>\n    <button class=\"but\"  @click=\"appendOperand('0')\">0</button>\n    <button class=\"but\"  @click=\"appendOperand('.')\">.</button>\n    <button class=\"but\"  @click=\"appendOperand('±')\">&#177;</button>\n    <button class=\"but eq\">=</button>\n  </div>\n  </div>\n</div>\n  \n</template>\n\n<script>\n\n\n\n\nexport default {\n  name: 'App',\n  data(){\n    return {\n    expression : \"\" ,\n    result : \"\" ,\n    expSend : {\n      firstOperand : 0,\n      operator : \"\",\n      secondOperand : 0,\n    },\n    ended : 1 ,\n    unary : false ,\n    index : 0 ,\n\n  }\n},\n  methods : {\n    appendOperand(input) {\n        this.expression=this.expression+input ;\n        switch(input){\n          case \"+\":\n            this.expSend.operator=input;\n            this.ended=2;\n            this.index = this.expression.length-1 ;\n            break;\n          case \"-\" :\n            this.expSend.operator=input;\n            this.ended=2;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"×\" :\n            this.expSend.operator=\"*\";\n            this.ended=2;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"/\":\n            this.expSend.operator=input;\n            this.ended=2;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"√\":\n            this.expSend.operator=\"root\";\n            this.ended=2;\n            this.unary= true ;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"²\":\n            this.expSend.operator=\"sqr\";\n            this.ended=2;\n            this.unary=true;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"^(-1)\" :  \n            this.expSend.operator=\"inverse\";\n            this.ended=2;\n            this.unary=true;\n            this.index = this.expression.length-1 ;\n            break ;\n          case \"%\" :\n            this.expSend.operator=\"percent\";\n            this.ended=2;\n            this.unary=true;\n            this.index = this.expression.length-1 ;\n            break ;\n        }\n        if(this.ended===1){\n          this.expSend.firstOperand = parseFloat(this.expression);\n        }\n        else if(this.ended===2){\n          this.expSend.secondOperand = parseFloat(this.expression.slice(this.index+1,this.expression.length));\n        }\n        this.result = \"\" ;\n        console.log(this.expSend);\n    },\n    deleteOPerand(){\n      this.expression=this.expression.slice(0, -1) ;\n    },\n    deleteAll(){\n      this.expression=\"\" ;\n      this.expSend.firstOperand= 0;\n      this.expSend.secondOperand=0;\n      this.expSend.operator=\"\";\n      this.ended = 1 ;\n      this.unary = false ;\n      this.index = 0 ;\n    },\n    equal(){\n      this.ex\n    }\n    \n\n  }\n  \n\n}\n</script>\n\n<style>\n#app {\n  width: 500px;\n  height: 500px;\n  background-color:#ddd ;\n  border: 6px solid rgb(89, 85, 85);\n  border-radius: 10px;\n\n\n}\n.screen{\n  margin-left: 7px;\n  margin-top: 10px;\n  width : 480px;\n  height: 100px;\n  background-color:#fff ;\n  font-size: 1.5em;\n  display: flex ;\n  text-align: center;\n  justify-content: center;\n  border: 2px solid rgb(33, 29, 29);\n  border-radius: 10px;\n  position: relative;\n}\n.inner{\n  position: relative;\n  top: 30px;\n  \n}\n.calcbuttons{\n\n  display: flex ;\n  flex-direction: row;\n  flex-wrap: wrap;\n  text-align:center;\n  justify-content: space-evenly;\n}\n.but{\n  width: 120px;\n  height: 50px;\n  margin-bottom: 10px;\n  border: 3px solid #fff ;\n  border-radius: 6px;\n  font-size: 1.5em;\n  text-align: center;\n  background-color:  #5e5555; \n  color: #ddd;\n}\n.has,.eq{\n  background-color: orange;\n  color: #5e5555;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}